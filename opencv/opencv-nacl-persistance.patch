48a49,51
> #include "naclmounts/base/Mount.h"
> #include "naclmounts/base/MountManager.h"
> #include "naclmounts/memory/MemMount.h"
249,250c252,254
<     FILE* file;
<     gzFile gzfile;
---
>     KernelProxy* kp;
>     int file;
>     char* gzfile;
280,281c284,289
<     else if( fs->file )
<         fputs( str, fs->file );
---
>     else if( fs->file != -1){
>         if(fs->kp != NULL)
>             fs->kp->write(fs->file, str, strlen(str));
>         else
>             CV_Error( CV_StsError, "NaclMount is not already setup");
>     }
283,284c291,292
<     else if( fs->gzfile )
<         gzputs( fs->gzfile, str );
---
>     //else if( fs->gzfile )
>         //gzputs( fs->gzfile, str );
310,311c318,321
<     if( fs->file )
<         return fgets( str, maxCount, fs->file );
---
>     if( fs->file != 1) {
>         fs->kp->read(fs->file, str, maxCount);
>         return str;
>     }
313,314c323,324
<     if( fs->gzfile )
<         return gzgets( fs->gzfile, str, maxCount );
---
>     //if( fs->gzfile )
>         //return gzgets( fs->gzfile, str, maxCount );
324,325c334,343
<     if( fs->file )
<         return feof(fs->file);
---
>     if( fs->file != -1){
>         char *c = (char*)malloc(sizeof(char)); 
>         int l = fs->kp->read(fs->file, c, 1); 
>         if(l > 0){
>             // restore to last position
>             fs->kp->lseek(fs->file, -1, SEEK_CUR);
>         }
>         //EOF if length is zero
>         return (l == 0) ? 1 : 0;
>     }
327,328c345,346
<     if( fs->gzfile )
<         return gzeof(fs->gzfile);
---
>     //if( fs->gzfile )
>         //return gzeof(fs->gzfile);
335,336c353,354
<     if( fs->file )
<         fclose( fs->file );
---
>     if( fs->file != -1)
>         fs->kp->close(fs->file);
338,339c356,357
<     else if( fs->gzfile )
<         gzclose( fs->gzfile );
---
>     //else if( fs->gzfile )
>         //gzclose( fs->gzfile );
350,351c368,369
<     if( fs->file )
<         rewind(fs->file);
---
>     if( fs->file != -1)
>         fs->kp->lseek(fs->file, 0, SEEK_SET);
353,354c371,372
<     else if( fs->gzfile )
<         gzrewind(fs->gzfile);
---
>     //else if( fs->gzfile )
>         //gzrewind(fs->gzfile);
365c383
< #define CV_IS_FILE_STORAGE(fs) ((fs) != 0 && (fs)->flags == CV_FILE_STORAGE)
---
> #define CV_IS_FILE_STORAGE(fs) ((fs)->file != -1 && (fs)->flags == CV_FILE_STORAGE)
2741,2742c2759,2761
<             fs->file = fopen(fs->filename, !fs->write_mode ? "rt" : !append ? "wt" : "a+t" );
<             if( !fs->file )
---
>             fs->kp = MountManager::MMInstance()->kp();
>             fs->file = fs->kp->open(filename, !fs->write_mode ? O_RDONLY : O_WRONLY, 0);
>             if( fs->file == -1)
2748,2751c2767,2770
<             char mode[] = { fs->write_mode ? 'w' : 'r', 'b', compression ? compression : '3', '\0' };
<             fs->gzfile = gzopen(fs->filename, mode);
<             if( !fs->gzfile )
<                 goto _exit_;
---
>             //char mode[] = { fs->write_mode ? 'w' : 'r', 'b', compression ? compression : '3', '\0' };
>             //fs->gzfile = gzopen(fs->filename, mode);
>             //if( !fs->gzfile )
>                 //goto _exit_;
2785c2804
<             fseek( fs->file, 0, SEEK_END );
---
>             fs->kp->lseek(fs->file, 0, SEEK_END);
2796c2815,2820
<             size_t file_size = fs->file ? ftell( fs->file ) : (size_t)0;
---
>             size_t file_size = (size_t)0;
>             if(fs->file != -1){
>                 off_t current = fs->kp->lseek(fs->file, 0, SEEK_CUR);
>                 file_size = (size_t)fs->kp->lseek(fs->file, 0, SEEK_END);
>                 fs->kp->lseek(fs->file, current, SEEK_SET);
>             }
2822c2846
<                 fseek( fs->file, -xml_buf_size, SEEK_END );
---
>                 fs->kp->lseek( fs->file, -xml_buf_size, SEEK_END );
2827c2851
<                     int line_offset = ftell( fs->file );
---
>                     int line_offset = fs->kp->lseek(fs->file, 0, SEEK_CUR );
2844,2845c2868,2869
<                 fs->file = fopen( fs->filename, "r+t" );
<                 fseek( fs->file, last_occurence, SEEK_SET );
---
>                 fs->file = fs->kp->open( fs->filename, O_RDONLY, 0 );
>                 fs->kp->lseek( fs->file, last_occurence, SEEK_SET );
2848c2872
<                 fseek( fs->file, 0, SEEK_END );
---
>                 fs->kp->lseek( fs->file, 0, SEEK_END );
2893,2894c2917,2918
<                 fseek( fs->file, 0, SEEK_END );
<                 buf_size = ftell( fs->file );
---
>                 fs->kp->lseek( fs->file, 0, SEEK_END );
>                 buf_size = fs->kp->lseek( fs->file, 0, SEEK_CUR );
5190c5214
<     return !fs.empty() && fs.obj->is_opened;
---
>     return !fs.empty() && fs->is_opened && fs->file != -1; 
